var mongoose = require('mongoose');
var bcrypt = require('bcryptjs');
var config = require('../config/database');
mongoose.Promise = require('bluebird');

var DocSchema = mongoose.Schema({
        code:{
            type:Number
        },
        accidentID:{
            type:Number
        },
        username:{
            type:String
        },
        patientInfo:{
         Name:{
            type:String
         },
        //age:this.age,
        address:{
            type:String
        },
        birthday:{
            type:String
        },
        complaint:{
            type:String
        },
        vitalsign:{
          airway:{
             clear:{
                type:Boolean
             },
             obstructed:{
                type:Boolean
             }
          },
          o2supply:{
            roomair:{
                type:Boolean
            },
            oxygenG:{
                type:Boolean
            }
          },
          Breathing:{
            Bnormal:{
                type:Boolean
            },
            shallow:{
                type:Boolean
            },
            rapid:{
                type:Boolean
            },
            labored:{
                type:Boolean
            },
            absent:{
                type:Boolean
            }

          },
          Capref:{
            L_twosecs:{
                type:Boolean
            },
            G_twosecs:{
                type:Boolean
            },
            G_foursecs:{
                type:Boolean
            },
            capAbsent:{
                type:Boolean
            },
          },bloodsugar:{
                type:String
            }
        }
        },
    managementnotes:{
                type:String
            },
    date:{
                type:String
            },
    nameofcaller:{
                type:String
            },
    teamresponder:{
                type:String
            },
    emergencyroutetimerecord:{
        callrecieved:{
                type:String
            },
        respondtime:{
                type:String
            },
        arrivaltoscene:{
                type:String
            },
        leftscene:{
                type:String
            },
        hospitalarrival:{
                type:String
            },
        acdrrmoarrival:{
                type:String
            }
    },
    natureaccident:{
      vehicularacc:{
                type:Boolean
            },
      pedacc:{
                type:Boolean
            },
      selfacc:{
                type:Boolean
            },
      medacc:{
                type:Boolean
            },
      maternalacc:{
                type:Boolean
            },
      otheracc:{
                type:Boolean
            }
    },
    vehicleinvolved:{
      bicycle:{
                type:Boolean
            },
      tricycle:{
                type:Boolean
            },
      motorcycle:{
                type:Boolean
            },
      car:{
                type:Boolean
            },
      suv:{
                type:Boolean
            },
      van:{
                type:Boolean
            },
      bus:{
                type:Boolean
            },
      truck:{
                type:Boolean
            },
      puj:{
                type:Boolean
            },
      other:{
                type:Boolean
            }
    },
    patienttransport:{
      resuscitation:{
                type:Boolean
            },
      emergency:{
                type:Boolean
            },
      urgent:{
                type:Boolean
            },
      semiurgent:{
                type:Boolean
            },
      routine:{
                type:Boolean
            },
    },
    incidentlocation:{
                type:String
            },
    motor:{
          obey:{
                type:Boolean
            },
          local:{
                type:Boolean
            },
          withdraw:{
                type:Boolean
            },
          flex:{
                type:Boolean
            },
          extend:{
                type:Boolean
            },
          Mnone:{
                type:Boolean
            }

    },eye:{

          spont:{
                type:Boolean
            },
          verbal:{
                type:Boolean
            },
          pain:{
                type:Boolean
            },
          Enone:{
                type:Boolean
            }

    },verbal:{
          orient:{
                type:Boolean
            },
          confuse:{
                type:Boolean
            },
          inaprop:{
                type:Boolean
            },
          incomp:{
                type:Boolean
            },
          Vnone:{
                type:Boolean
            }
    },
    total:{
                type:Number
            },
    levelofconsiousness:{
          a:{
                type:Boolean
            },
          v:{
                type:Boolean
            },
          p:{
                type:Boolean
            },
          u:{
                type:Boolean
            }
    },vitalsign:{
        vtime:{type:String},//String
  vpulse:{type:String},//String
  vbp:{type:String},//String
  vresp:{type:String},//String
  vtemp:{type:String},//String
  vsao:{type:String}//String

    },skin:{
      normal:{
                type:Boolean
            },
  cyanotic:{
                type:Boolean
            },
  redness:{
                type:Boolean
            },
  pale:{
                type:Boolean
            },
  //skin temp
  warm:{
                type:Boolean
            },
  hot:{
                type:Boolean
            },
  cool:{
                type:Boolean
            },
  cold:{
                type:Boolean
            }
    },
    createdOn:{
      type:Date,
      default:Date.now
    }

});

var Doc = module.exports = mongoose.model('Document',DocSchema);

module.exports.addDocument = function(newDoc,callback){
    newDoc.save(callback);
};
module.exports.findbyaccidentID = function(accidentID,callback){
    var query ={
      accidentID:accidentID
    };
    Doc.find(query,callback);
};
module.exports.getByUsername = function(username,callback){
    var query = {
        username:username
    };
    Doc.find(query,callback);
};
